[{"/Users/mattnorthmore/Documents/Github/project-1-MrNorthmore/ers/src/index.tsx":"1","/Users/mattnorthmore/Documents/Github/project-1-MrNorthmore/ers/src/reportWebVitals.ts":"2","/Users/mattnorthmore/Documents/Github/project-1-MrNorthmore/ers/src/App.tsx":"3","/Users/mattnorthmore/Documents/Github/project-1-MrNorthmore/ers/src/components/login/LoginForm.tsx":"4","/Users/mattnorthmore/Documents/Github/project-1-MrNorthmore/ers/src/remote/ers/ers-functions.ts":"5","/Users/mattnorthmore/Documents/Github/project-1-MrNorthmore/ers/src/remote/ers/index.ts":"6","/Users/mattnorthmore/Documents/Github/project-1-MrNorthmore/ers/src/components/manager-dashboard/ManagerDashboard.tsx":"7","/Users/mattnorthmore/Documents/Github/project-1-MrNorthmore/ers/src/components/employee-dashboard/EmployeeDashboard.tsx":"8","/Users/mattnorthmore/Documents/Github/project-1-MrNorthmore/ers/src/components/employee-dashboard/reimbursement-request/ReimbursementRequest.tsx":"9","/Users/mattnorthmore/Documents/Github/project-1-MrNorthmore/ers/src/components/employee-dashboard/reimbursement-history/ReimbursementHistory.tsx":"10","/Users/mattnorthmore/Documents/Github/project-1-MrNorthmore/ers/src/components/employee-dashboard/reimbursement-pending/PendingReimbursements.tsx":"11","/Users/mattnorthmore/Documents/Github/project-1-MrNorthmore/ers/src/components/manager-dashboard/reimbursement-review/ReimbursementReview.tsx":"12","/Users/mattnorthmore/Documents/Github/project-1-MrNorthmore/ers/src/components/manager-dashboard/all-reimbursement-history/AllReimbursementHistory.tsx":"13"},{"size":500,"mtime":1609269338774,"results":"14","hashOfConfig":"15"},{"size":425,"mtime":1609269338777,"results":"16","hashOfConfig":"15"},{"size":1556,"mtime":1609726704558,"results":"17","hashOfConfig":"15"},{"size":2576,"mtime":1609727746140,"results":"18","hashOfConfig":"15"},{"size":3557,"mtime":1609613638248,"results":"19","hashOfConfig":"15"},{"size":188,"mtime":1609374312118,"results":"20","hashOfConfig":"15"},{"size":2052,"mtime":1609727998903,"results":"21","hashOfConfig":"15"},{"size":2660,"mtime":1609728071936,"results":"22","hashOfConfig":"15"},{"size":4137,"mtime":1609619135385,"results":"23","hashOfConfig":"15"},{"size":3500,"mtime":1609774343187,"results":"24","hashOfConfig":"15"},{"size":3147,"mtime":1609774243331,"results":"25","hashOfConfig":"15"},{"size":4587,"mtime":1609774476922,"results":"26","hashOfConfig":"15"},{"size":3558,"mtime":1609774442390,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1nq86fb",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"/Users/mattnorthmore/Documents/Github/project-1-MrNorthmore/ers/src/index.tsx",[],["59","60"],"/Users/mattnorthmore/Documents/Github/project-1-MrNorthmore/ers/src/reportWebVitals.ts",[],"/Users/mattnorthmore/Documents/Github/project-1-MrNorthmore/ers/src/App.tsx",["61"],"import React, { useState } from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\nimport { LoginForm } from './components/login/LoginForm';\nimport { EmployeeDashboard } from './components/employee-dashboard/EmployeeDashboard';\nimport { ManagerDashboard } from './components/manager-dashboard/ManagerDashboard';\nimport { User } from './models/User';\nimport { ToastContainer } from 'react-toastify';\n\nfunction App() {\n\n  // All the lifted states we will need to provide to children components. Ex. the current logged in user\n  const [user, changeUser] = useState<User>();\n\n\n  return (\n    <div className=\"App\">\n        <Router>\n        <header className=\"App-header\">\n          <Switch>\n            <Route exact path=\"/\">\n              <LoginForm currentUser={user} updateCurrentUser={changeUser} />\n            </Route>\n            <Route path=\"/employee\">\n              <EmployeeDashboard currentUser={user} updateCurrentUser={changeUser} />\n            </Route>\n            <Route path=\"/manager\">\n              <ManagerDashboard currentUser={user} updateCurrentUser={changeUser} />\n            </Route>\n          </Switch>\n          </header>\n          <ToastContainer\n            position=\"top-right\"\n            autoClose={5000}\n            hideProgressBar={false}\n            newestOnTop={false}\n            closeOnClick\n            rtl={false}\n            pauseOnFocusLoss\n            draggable\n            pauseOnHover\n          />\n        </Router>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/mattnorthmore/Documents/Github/project-1-MrNorthmore/ers/src/components/login/LoginForm.tsx",[],"/Users/mattnorthmore/Documents/Github/project-1-MrNorthmore/ers/src/remote/ers/ers-functions.ts",[],"/Users/mattnorthmore/Documents/Github/project-1-MrNorthmore/ers/src/remote/ers/index.ts",[],["62","63"],"/Users/mattnorthmore/Documents/Github/project-1-MrNorthmore/ers/src/components/manager-dashboard/ManagerDashboard.tsx",[],"/Users/mattnorthmore/Documents/Github/project-1-MrNorthmore/ers/src/components/employee-dashboard/EmployeeDashboard.tsx",[],"/Users/mattnorthmore/Documents/Github/project-1-MrNorthmore/ers/src/components/employee-dashboard/reimbursement-request/ReimbursementRequest.tsx",[],"/Users/mattnorthmore/Documents/Github/project-1-MrNorthmore/ers/src/components/employee-dashboard/reimbursement-history/ReimbursementHistory.tsx",["64"],"import {\n  TableContainer,\n  Paper,\n  Table,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableBody,\n} from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport { Reimbursement } from \"../../../models/Reimbursement\";\nimport { User } from \"../../../models/User\";\nimport { ersGetAllReimbursementsByUser } from \"../../../remote/ers/ers-functions\";\n\ninterface IReimbursementHistoryProps {\n  updateCurrentUser: (u: User) => void;\n  currentUser: User;\n}\n\nexport const ReimbursementHistory: React.FunctionComponent<IReimbursementHistoryProps> = (\n  props\n) => {\n  const [reimbursements, changeReimbursements] = useState<Reimbursement[]>();\n\n  useEffect(() => {\n    const getReimbursements = async () => {\n      let reimbs = await ersGetAllReimbursementsByUser(\n        props.currentUser.userId.toString()\n      );\n      console.log(reimbs);\n      changeReimbursements(reimbs);\n    };\n    getReimbursements();\n  }, []);\n\n  return (\n    <>\n    <div>\n      <h3>Reimbursement History</h3>\n    </div>\n    <TableContainer component={Paper}>\n      <Table aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Id</TableCell>\n            <TableCell align=\"center\">Amount</TableCell>\n            <TableCell align=\"center\">Description</TableCell>\n            <TableCell align=\"center\">Date Submitted</TableCell>\n            <TableCell align=\"center\">Submitted By</TableCell>\n            <TableCell align=\"center\">Type</TableCell>\n            <TableCell align=\"center\">Status</TableCell>\n            <TableCell align=\"center\">Date Resolved</TableCell>\n            <TableCell align=\"center\">Resolved By</TableCell>\n          </TableRow>\n        </TableHead>\n        {}\n        <TableBody>\n          {reimbursements ? (\n            reimbursements.map((row) => (\n              <TableRow key={row.reimbursementId}>\n                <TableCell component=\"th\" scope=\"row\" align=\"center\">\n                  {row.reimbursementId}\n                </TableCell>\n                <TableCell align=\"center\">{row.reimbursementAmt}</TableCell>\n                <TableCell align=\"center\">{row.reimbursementDesc}</TableCell>\n                <TableCell align=\"center\">\n                  {row.reimbursementSubmitted}\n                </TableCell>\n                <TableCell align=\"center\">{row.reimbursementAuthor}</TableCell>\n                <TableCell align=\"center\">\n                  {row.reimbursementType === 1\n                    ? \"Lodging\"\n                    : row.reimbursementType === 2\n                    ? \"Travel\"\n                    : row.reimbursementType === 3\n                    ? \"Food\"\n                    : \"Other\"}\n                </TableCell>\n                <TableCell align=\"center\">\n                  {row.reimbursementStatus === 1\n                    ? \"Pending\"\n                    : row.reimbursementStatus === 2\n                    ? \"Approved\"\n                    : \"Rejected\"}\n                </TableCell>\n                <TableCell align=\"center\">\n                  {row.reimbursementResolved}\n                </TableCell>\n                <TableCell align=\"center\">\n                  {row.reimbursementResolver}\n                </TableCell>\n              </TableRow>\n            ))\n          ) : (\n            <TableRow key={1}>\n              <TableCell component=\"th\" scope=\"row\">\n                Loading...\n              </TableCell>\n            </TableRow>\n          )}\n        </TableBody>\n      </Table>\n    </TableContainer>\n    </>\n  );\n};\n","/Users/mattnorthmore/Documents/Github/project-1-MrNorthmore/ers/src/components/employee-dashboard/reimbursement-pending/PendingReimbursements.tsx",["65"],"import {\n  TableContainer,\n  Paper,\n  Table,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableBody,\n} from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport { Reimbursement } from \"../../../models/Reimbursement\";\nimport { User } from \"../../../models/User\";\nimport { ersGetAllPendingReimbursementsByUser } from \"../../../remote/ers/ers-functions\";\n\ninterface IPendingReimbursementsProps {\n  updateCurrentUser: (u: User) => void;\n  currentUser: User;\n}\n\nexport const PendingReimbursements: React.FunctionComponent<IPendingReimbursementsProps> = (\n  props\n) => {\n  const [reimbursements, changeReimbursements] = useState<Reimbursement[]>();\n\n  useEffect(() => {\n    const getReimbursements = async () => {\n      let reimbs = await ersGetAllPendingReimbursementsByUser(\n        props.currentUser.userId.toString()\n      );\n      console.log(reimbs);\n      changeReimbursements(reimbs);\n    };\n    getReimbursements();\n  }, []);\n  return (\n    <div>\n      <h3>Pending Reimbursements</h3>\n      <TableContainer component={Paper}>\n      <Table aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Id</TableCell>\n            <TableCell align=\"center\">Amount</TableCell>\n            <TableCell align=\"center\">Description</TableCell>\n            <TableCell align=\"center\">Date Submitted</TableCell>\n            <TableCell align=\"center\">Submitted By</TableCell>\n            <TableCell align=\"center\">Type</TableCell>\n            <TableCell align=\"center\">Status</TableCell>\n          </TableRow>\n        </TableHead>\n        {}\n        <TableBody>\n          {reimbursements ? (\n            reimbursements.map((row) => (\n              <TableRow key={row.reimbursementId}>\n                <TableCell component=\"th\" scope=\"row\" align=\"center\">\n                  {row.reimbursementId}\n                </TableCell>\n                <TableCell align=\"center\">{row.reimbursementAmt}</TableCell>\n                <TableCell align=\"center\">{row.reimbursementDesc}</TableCell>\n                <TableCell align=\"center\">\n                  {row.reimbursementSubmitted}\n                </TableCell>\n                <TableCell align=\"center\">{row.reimbursementAuthor}</TableCell>\n                <TableCell align=\"center\">\n                  {row.reimbursementType === 1\n                    ? \"Lodging\"\n                    : row.reimbursementType === 2\n                    ? \"Travel\"\n                    : row.reimbursementType === 3\n                    ? \"Food\"\n                    : \"Other\"}\n                </TableCell>\n                <TableCell align=\"center\">\n                  {row.reimbursementStatus === 1\n                    ? \"Pending\"\n                    : row.reimbursementStatus === 2\n                    ? \"Approved\"\n                    : \"Rejected\"}\n                </TableCell>\n              </TableRow>\n            ))\n          ) : (\n            <TableRow key={1}>\n              <TableCell component=\"th\" scope=\"row\">\n                Loading...\n              </TableCell>\n            </TableRow>\n          )}\n        </TableBody>\n      </Table>\n    </TableContainer>\n    </div>\n    \n  );\n};\n","/Users/mattnorthmore/Documents/Github/project-1-MrNorthmore/ers/src/components/manager-dashboard/reimbursement-review/ReimbursementReview.tsx",[],"/Users/mattnorthmore/Documents/Github/project-1-MrNorthmore/ers/src/components/manager-dashboard/all-reimbursement-history/AllReimbursementHistory.tsx",[],{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":3,"column":50,"nodeType":"72","messageId":"73","endLine":3,"endColumn":54},{"ruleId":"66","replacedBy":"74"},{"ruleId":"68","replacedBy":"75"},{"ruleId":"76","severity":1,"message":"77","line":34,"column":6,"nodeType":"78","endLine":34,"endColumn":8,"suggestions":"79"},{"ruleId":"76","severity":1,"message":"77","line":34,"column":6,"nodeType":"78","endLine":34,"endColumn":8,"suggestions":"80"},"no-native-reassign",["81"],"no-negated-in-lhs",["82"],"@typescript-eslint/no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar",["81"],["82"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.currentUser.userId'. Either include it or remove the dependency array.","ArrayExpression",["83"],["84"],"no-global-assign","no-unsafe-negation",{"desc":"85","fix":"86"},{"desc":"85","fix":"87"},"Update the dependencies array to be: [props.currentUser.userId]",{"range":"88","text":"89"},{"range":"90","text":"89"},[929,931],"[props.currentUser.userId]",[946,948]]