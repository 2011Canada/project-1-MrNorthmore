[{"/Users/mattnorthmore/Documents/Github/project-1-MrNorthmore/ers/src/index.tsx":"1","/Users/mattnorthmore/Documents/Github/project-1-MrNorthmore/ers/src/reportWebVitals.ts":"2","/Users/mattnorthmore/Documents/Github/project-1-MrNorthmore/ers/src/App.tsx":"3","/Users/mattnorthmore/Documents/Github/project-1-MrNorthmore/ers/src/components/login/LoginForm.tsx":"4","/Users/mattnorthmore/Documents/Github/project-1-MrNorthmore/ers/src/remote/ers/ers-functions.ts":"5","/Users/mattnorthmore/Documents/Github/project-1-MrNorthmore/ers/src/remote/ers/index.ts":"6","/Users/mattnorthmore/Documents/Github/project-1-MrNorthmore/ers/src/components/manager-dashboard/ManagerDashboard.tsx":"7","/Users/mattnorthmore/Documents/Github/project-1-MrNorthmore/ers/src/components/employee-dashboard/EmployeeDashboard.tsx":"8","/Users/mattnorthmore/Documents/Github/project-1-MrNorthmore/ers/src/components/employee-dashboard/reimbursement-request/ReimbursementRequest.tsx":"9","/Users/mattnorthmore/Documents/Github/project-1-MrNorthmore/ers/src/components/employee-dashboard/reimbursement-history/ReimbursementHistory.tsx":"10","/Users/mattnorthmore/Documents/Github/project-1-MrNorthmore/ers/src/components/employee-dashboard/reimbursement-pending/PendingReimbursements.tsx":"11","/Users/mattnorthmore/Documents/Github/project-1-MrNorthmore/ers/src/components/manager-dashboard/reimbursement-review/ReimbursementReview.tsx":"12","/Users/mattnorthmore/Documents/Github/project-1-MrNorthmore/ers/src/components/manager-dashboard/all-reimbursement-history/AllReimbursementHistory.tsx":"13"},{"size":500,"mtime":1609269338774,"results":"14","hashOfConfig":"15"},{"size":425,"mtime":1609269338777,"results":"16","hashOfConfig":"15"},{"size":1207,"mtime":1609425571674,"results":"17","hashOfConfig":"15"},{"size":2606,"mtime":1609618347416,"results":"18","hashOfConfig":"15"},{"size":3557,"mtime":1609613638248,"results":"19","hashOfConfig":"15"},{"size":188,"mtime":1609374312118,"results":"20","hashOfConfig":"15"},{"size":2052,"mtime":1609702303067,"results":"21","hashOfConfig":"15"},{"size":2682,"mtime":1609618299329,"results":"22","hashOfConfig":"15"},{"size":4137,"mtime":1609619135385,"results":"23","hashOfConfig":"15"},{"size":3427,"mtime":1609620064225,"results":"24","hashOfConfig":"15"},{"size":3081,"mtime":1609620031978,"results":"25","hashOfConfig":"15"},{"size":4520,"mtime":1609620351070,"results":"26","hashOfConfig":"15"},{"size":3493,"mtime":1609620157431,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1nq86fb",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"30"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"/Users/mattnorthmore/Documents/Github/project-1-MrNorthmore/ers/src/index.tsx",[],["60","61"],"/Users/mattnorthmore/Documents/Github/project-1-MrNorthmore/ers/src/reportWebVitals.ts",[],"/Users/mattnorthmore/Documents/Github/project-1-MrNorthmore/ers/src/App.tsx",["62"],"import React, { useState } from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\nimport { LoginForm } from './components/login/LoginForm';\nimport { EmployeeDashboard } from './components/employee-dashboard/EmployeeDashboard';\nimport { ManagerDashboard } from './components/manager-dashboard/ManagerDashboard';\nimport { User } from './models/User';\n\nfunction App() {\n\n  // All the lifted states we will need to provide to children components. Ex. the current logged in user\n  const [user, changeUser] = useState<User>();\n\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Router>\n          <Switch>\n            <Route exact path=\"/\">\n              <LoginForm currentUser={user} updateCurrentUser={changeUser} />\n            </Route>\n            <Route path=\"/employee\">\n              <EmployeeDashboard currentUser={user} updateCurrentUser={changeUser} />\n            </Route>\n            <Route path=\"/manager\">\n              <ManagerDashboard currentUser={user} updateCurrentUser={changeUser} />\n            </Route>\n          </Switch>\n        </Router>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/mattnorthmore/Documents/Github/project-1-MrNorthmore/ers/src/components/login/LoginForm.tsx",[],"/Users/mattnorthmore/Documents/Github/project-1-MrNorthmore/ers/src/remote/ers/ers-functions.ts",[],"/Users/mattnorthmore/Documents/Github/project-1-MrNorthmore/ers/src/remote/ers/index.ts",[],["63","64"],"/Users/mattnorthmore/Documents/Github/project-1-MrNorthmore/ers/src/components/manager-dashboard/ManagerDashboard.tsx",["65"],"/Users/mattnorthmore/Documents/Github/project-1-MrNorthmore/ers/src/components/employee-dashboard/EmployeeDashboard.tsx",["66","67"],"import { Button, ButtonGroup } from \"@material-ui/core\";\nimport React, { useState } from \"react\";\nimport {\n  Link,\n  Redirect,\n  Route,\n  Switch,\n  useHistory,\n  useRouteMatch,\n} from \"react-router-dom\";\nimport { User } from \"../../models/User\";\nimport { ReimbursementHistory } from \"./reimbursement-history/ReimbursementHistory\";\nimport { PendingReimbursements } from \"./reimbursement-pending/PendingReimbursements\";\nimport { ReimbursementRequest } from \"./reimbursement-request/ReimbursementRequest\";\n\ninterface IEmployeeDashboardProps {\n  updateCurrentUser: (u: User) => void;\n  currentUser: User;\n}\n\nexport const EmployeeDashboard: React.FunctionComponent<IEmployeeDashboardProps> = (\n  props\n) => {\n  let { path, url } = useRouteMatch();\n\n  let history = useHistory();\n\n  const newReimbursementNav = () => {\n    history.push(`${url}/new-reimbursement`);\n  };\n\n  const reimbursementHistoryNav = () => {\n    history.push(`${url}/reimbursement-history`);\n  };\n\n  const pendingReimbursementNav = () => {\n    history.push(`${url}/pending-reimbursements`);\n  };\n\n  const signoutNav = () => {\n    history.push(`/`);\n  };\n\n  return props.currentUser ? (\n    <div>\n      <h1>Welcome to employee dashboard</h1>\n      <h2>What would you like to do?</h2>\n      <ButtonGroup color=\"primary\" aria-label=\"outlined primary button group\">\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={newReimbursementNav}\n        >\n          New Reimbursement\n        </Button>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={reimbursementHistoryNav}\n        >\n          History\n        </Button>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={pendingReimbursementNav}\n        >\n          Pending\n        </Button>\n        <Button variant=\"contained\" color=\"primary\" onClick={signoutNav}>\n          Signout\n        </Button>\n      </ButtonGroup>\n\n      <Switch>\n        <Route path={`${path}/new-reimbursement`}>\n          <ReimbursementRequest\n            currentUser={props.currentUser}\n            updateCurrentUser={props.updateCurrentUser}\n          />\n        </Route>\n        <Route path={`${path}/reimbursement-history`}>\n          <ReimbursementHistory\n            currentUser={props.currentUser}\n            updateCurrentUser={props.updateCurrentUser}\n          />\n        </Route>\n        <Route path={`${path}/pending-reimbursements`}>\n          <PendingReimbursements\n            currentUser={props.currentUser}\n            updateCurrentUser={props.updateCurrentUser}\n          />\n        </Route>\n      </Switch>\n    </div>\n  ) : (\n    <Redirect to=\"/\" />\n  );\n};\n","/Users/mattnorthmore/Documents/Github/project-1-MrNorthmore/ers/src/components/employee-dashboard/reimbursement-request/ReimbursementRequest.tsx",[],"/Users/mattnorthmore/Documents/Github/project-1-MrNorthmore/ers/src/components/employee-dashboard/reimbursement-history/ReimbursementHistory.tsx",["68"],"import {\n  TableContainer,\n  Paper,\n  Table,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableBody,\n} from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport { Reimbursement } from \"../../../models/Reimbursement\";\nimport { User } from \"../../../models/User\";\nimport { ersGetAllReimbursementsByUser } from \"../../../remote/ers/ers-functions\";\n\ninterface IReimbursementHistoryProps {\n  updateCurrentUser: (u: User) => void;\n  currentUser: User;\n}\n\nexport const ReimbursementHistory: React.FunctionComponent<IReimbursementHistoryProps> = (\n  props\n) => {\n  const [reimbursements, changeReimbursements] = useState<Reimbursement[]>();\n\n  useEffect(() => {\n    const getReimbursements = async () => {\n      let reimbs = await ersGetAllReimbursementsByUser(\n        props.currentUser.userId.toString()\n      );\n      console.log(reimbs);\n      changeReimbursements(reimbs);\n    };\n    getReimbursements();\n  }, []);\n\n  return (\n    <TableContainer component={Paper}>\n      <Table aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Id</TableCell>\n            <TableCell align=\"center\">Amount</TableCell>\n            <TableCell align=\"center\">Description</TableCell>\n            <TableCell align=\"center\">Date Submitted</TableCell>\n            <TableCell align=\"center\">Submitted By</TableCell>\n            <TableCell align=\"center\">Type</TableCell>\n            <TableCell align=\"center\">Status</TableCell>\n            <TableCell align=\"center\">Date Resolved</TableCell>\n            <TableCell align=\"center\">Resolved By</TableCell>\n          </TableRow>\n        </TableHead>\n        {}\n        <TableBody>\n          {reimbursements ? (\n            reimbursements.map((row) => (\n              <TableRow key={row.reimbursementId}>\n                <TableCell component=\"th\" scope=\"row\" align=\"center\">\n                  {row.reimbursementId}\n                </TableCell>\n                <TableCell align=\"center\">{row.reimbursementAmt}</TableCell>\n                <TableCell align=\"center\">{row.reimbursementDesc}</TableCell>\n                <TableCell align=\"center\">\n                  {row.reimbursementSubmitted}\n                </TableCell>\n                <TableCell align=\"center\">{row.reimbursementAuthor}</TableCell>\n                <TableCell align=\"center\">\n                  {row.reimbursementType === 1\n                    ? \"Lodging\"\n                    : row.reimbursementType === 2\n                    ? \"Travel\"\n                    : row.reimbursementType === 3\n                    ? \"Food\"\n                    : \"Other\"}\n                </TableCell>\n                <TableCell align=\"center\">\n                  {row.reimbursementStatus === 1\n                    ? \"Pending\"\n                    : row.reimbursementStatus === 2\n                    ? \"Approved\"\n                    : \"Rejected\"}\n                </TableCell>\n                <TableCell align=\"center\">\n                  {row.reimbursementResolved}\n                </TableCell>\n                <TableCell align=\"center\">\n                  {row.reimbursementResolver}\n                </TableCell>\n              </TableRow>\n            ))\n          ) : (\n            <TableRow key={1}>\n              <TableCell component=\"th\" scope=\"row\">\n                Loading...\n              </TableCell>\n            </TableRow>\n          )}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n};\n","/Users/mattnorthmore/Documents/Github/project-1-MrNorthmore/ers/src/components/employee-dashboard/reimbursement-pending/PendingReimbursements.tsx",["69"],"import {\n  TableContainer,\n  Paper,\n  Table,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableBody,\n} from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport { Reimbursement } from \"../../../models/Reimbursement\";\nimport { User } from \"../../../models/User\";\nimport { ersGetAllPendingReimbursementsByUser } from \"../../../remote/ers/ers-functions\";\n\ninterface IPendingReimbursementsProps {\n  updateCurrentUser: (u: User) => void;\n  currentUser: User;\n}\n\nexport const PendingReimbursements: React.FunctionComponent<IPendingReimbursementsProps> = (\n  props\n) => {\n  const [reimbursements, changeReimbursements] = useState<Reimbursement[]>();\n\n  useEffect(() => {\n    const getReimbursements = async () => {\n      let reimbs = await ersGetAllPendingReimbursementsByUser(\n        props.currentUser.userId.toString()\n      );\n      console.log(reimbs);\n      changeReimbursements(reimbs);\n    };\n    getReimbursements();\n  }, []);\n  return (\n    <TableContainer component={Paper}>\n      <Table aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Id</TableCell>\n            <TableCell align=\"center\">Amount</TableCell>\n            <TableCell align=\"center\">Description</TableCell>\n            <TableCell align=\"center\">Date Submitted</TableCell>\n            <TableCell align=\"center\">Submitted By</TableCell>\n            <TableCell align=\"center\">Type</TableCell>\n            <TableCell align=\"center\">Status</TableCell>\n          </TableRow>\n        </TableHead>\n        {}\n        <TableBody>\n          {reimbursements ? (\n            reimbursements.map((row) => (\n              <TableRow key={row.reimbursementId}>\n                <TableCell component=\"th\" scope=\"row\" align=\"center\">\n                  {row.reimbursementId}\n                </TableCell>\n                <TableCell align=\"center\">{row.reimbursementAmt}</TableCell>\n                <TableCell align=\"center\">{row.reimbursementDesc}</TableCell>\n                <TableCell align=\"center\">\n                  {row.reimbursementSubmitted}\n                </TableCell>\n                <TableCell align=\"center\">{row.reimbursementAuthor}</TableCell>\n                <TableCell align=\"center\">\n                  {row.reimbursementType === 1\n                    ? \"Lodging\"\n                    : row.reimbursementType === 2\n                    ? \"Travel\"\n                    : row.reimbursementType === 3\n                    ? \"Food\"\n                    : \"Other\"}\n                </TableCell>\n                <TableCell align=\"center\">\n                  {row.reimbursementStatus === 1\n                    ? \"Pending\"\n                    : row.reimbursementStatus === 2\n                    ? \"Approved\"\n                    : \"Rejected\"}\n                </TableCell>\n              </TableRow>\n            ))\n          ) : (\n            <TableRow key={1}>\n              <TableCell component=\"th\" scope=\"row\">\n                Loading...\n              </TableCell>\n            </TableRow>\n          )}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n};\n","/Users/mattnorthmore/Documents/Github/project-1-MrNorthmore/ers/src/components/manager-dashboard/reimbursement-review/ReimbursementReview.tsx",[],"/Users/mattnorthmore/Documents/Github/project-1-MrNorthmore/ers/src/components/manager-dashboard/all-reimbursement-history/AllReimbursementHistory.tsx",[],{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","severity":1,"message":"75","line":3,"column":50,"nodeType":"76","messageId":"77","endLine":3,"endColumn":54},{"ruleId":"70","replacedBy":"78"},{"ruleId":"72","replacedBy":"79"},{"ruleId":"74","severity":1,"message":"75","line":3,"column":10,"nodeType":"76","messageId":"77","endLine":3,"endColumn":14},{"ruleId":"74","severity":1,"message":"80","line":2,"column":17,"nodeType":"76","messageId":"77","endLine":2,"endColumn":25},{"ruleId":"74","severity":1,"message":"75","line":4,"column":3,"nodeType":"76","messageId":"77","endLine":4,"endColumn":7},{"ruleId":"81","severity":1,"message":"82","line":34,"column":6,"nodeType":"83","endLine":34,"endColumn":8,"suggestions":"84"},{"ruleId":"81","severity":1,"message":"82","line":34,"column":6,"nodeType":"83","endLine":34,"endColumn":8,"suggestions":"85"},"no-native-reassign",["86"],"no-negated-in-lhs",["87"],"@typescript-eslint/no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar",["86"],["87"],"'useState' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.currentUser.userId'. Either include it or remove the dependency array.","ArrayExpression",["88"],["89"],"no-global-assign","no-unsafe-negation",{"desc":"90","fix":"91"},{"desc":"90","fix":"92"},"Update the dependencies array to be: [props.currentUser.userId]",{"range":"93","text":"94"},{"range":"95","text":"94"},[929,931],"[props.currentUser.userId]",[946,948]]